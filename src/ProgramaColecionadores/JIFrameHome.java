package ProgramaColecionadores;

import Jogo.Jogador;
import Jogo.TelaJogo;
import Jogo.Trunfo;
import static ProgramaColecionadores.Principal.idUserLog;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.beans.PropertyVetoException;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lorencia
 */
public class JIFrameHome extends javax.swing.JInternalFrame {
     private int idUserLogando=Principal.getIdUserLogando();
       private List<Atividade> lstMinhasAtividades;
       private int idAtividade;
       int p;
       int posicaoAtividadeRede;
       Integer idUsuario;
    private ExibeItemColecao e;
    private Usuario usuario;
    private JInternalFrame container;
    private JPanelAtividadeRede jPanelAtividadeRede1;
    private List<JPanel> resultados;

    /**
     * Creates new form JIFrameHome
     */
    public JIFrameHome(int idUsuario) {
        this.idUsuario=Principal.getIdUserLogando();
        usuario=Dados.getUsuariosBD().get(idUsuario);
        jPanelAtividadeRede1=new JPanelAtividadeRede();      
        this.isMaximum=true;
        initComponents();
        sugestaoAmizades();
        this.jPanelCentro.add(jPanelAtividadeRede1);
        jPanelAtividadeRede1.setVisible(true);
        this.jPanelCentro.updateUI();
        this.jButtonLeilao.setVisible(false);
        usuario=Dados.getUsuariosBD().get(idUsuario);
        if(Principal.getIdUserLogando()==idUsuario){
            jButtonAdicionarAmigo.setText("EDITAR");
        }else{//jPanel8.setVisible(false);
        }
       
        
        if(usuario.getFoto()!=null){
        jLabelFoto.setSize(50,50);
        jLabelFoto.setIcon(new ImageIcon(usuario.getFoto().getScaledInstance(jLabelFoto.getWidth(), jLabelFoto.getHeight(), Image.SCALE_DEFAULT)));
        }else{
            jLabelFoto.setSize(50,50);
            ImageIcon icon=new ImageIcon(getClass().getResource("/Images/default_user_mini.png")); 
            jLabelFoto.setIcon(new ImageIcon(icon.getImage().getScaledInstance(jLabelFoto.getWidth(), jLabelFoto.getHeight(), Image.SCALE_DEFAULT)));

        }
        
        
        jButtonNome.setText(usuario.getNome()+" "+usuario.getSobrenome());
        this.jLabelRank.setText("Rank: "+usuario.getRank());
        this.jLabelNumeroColecoes.setText("Quantidade Coleções: "+usuario.getQuantidadeColecoes());
        this.jLabelItens.setText("Quantidade Itens: "+usuario.getQuantidadeItensColecoes());
      
        
        verificaColecoes(); 
       this.jComboBoxItem.setEnabled(false);
       if(Principal.getIdUserLogando()!=idUsuario){
           jLabelFoto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
           ADDItem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
           Excluir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
           jComboBoxColecao.setEnabled(false);
           JIFrameUsuariosRede.removeMenu();
           jComboBoxColecao.setVisible(false);
           ADDItem.setVisible(false);
           Excluir.setVisible(false);
           jComboBoxItem.setVisible(false);     
       
       }
      
       this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        Toolkit kit = Toolkit.getDefaultToolkit();  
        Dimension tamTela = kit.getScreenSize();
        double larg=tamTela.getWidth();
        this.setMinimumSize(new Dimension((int)larg,836));
        this.jPanel12.setMinimumSize(new Dimension((int)larg,836));
        this.jScrollPane1.setMinimumSize(new Dimension((int)larg,336));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelJogo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbListarCliente = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbListarJogos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonConvidarJogo = new javax.swing.JButton();
        jButtonJogar = new javax.swing.JButton();
        jComboBoxColecaoJogo = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        ProgramaColecionadores.JPanelAtividadeRede jPanelAtividadeRede1 = new JPanelAtividadeRede();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelFoto = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jButtonNome = new javax.swing.JButton();
        jButtonRecado = new javax.swing.JButton();
        jButtonAdicionarAmigo = new javax.swing.JButton();
        jComboBoxAtividade = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxPrioridade = new javax.swing.JComboBox();
        jLabelRank = new javax.swing.JButton();
        jLabelNumeroColecoes = new javax.swing.JButton();
        jLabelItens = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButtonTroca = new javax.swing.JButton();
        jButtonComunidade = new javax.swing.JButton();
        jButtonAmigos = new javax.swing.JButton();
        jButtonShopping = new javax.swing.JButton();
        jButtonEventos = new javax.swing.JButton();
        jButtonLeilao = new javax.swing.JButton();
        jButtonPublicidade = new javax.swing.JButton();
        jComboBoxColecao = new javax.swing.JComboBox();
        Excluir = new javax.swing.JLabel();
        ADDItem = new javax.swing.JLabel();
        jComboBoxItem = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jButtonJogoTrunfo = new javax.swing.JButton();
        jButtonCamiseta = new javax.swing.JButton();
        jButtonQuadrinho = new javax.swing.JButton();
        jButtonHotWheels1 = new javax.swing.JButton();
        jButtonMoeda = new javax.swing.JButton();
        jButtonCartao = new javax.swing.JButton();
        jButtonJogo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanelSugestao = new javax.swing.JPanel();
        jPanelCentro = new javax.swing.JPanel();

        jPanelJogo.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtbListarCliente.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jtbListarCliente.setForeground(new java.awt.Color(21, 30, 51));
        jtbListarCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbListarCliente.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtbListarCliente.setGridColor(new java.awt.Color(21, 30, 51));
        jtbListarCliente.setSelectionBackground(new java.awt.Color(21, 30, 51));
        jScrollPane2.setViewportView(jtbListarCliente);

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane3.setOpaque(false);

        jtbListarJogos.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jtbListarJogos.setForeground(new java.awt.Color(21, 30, 51));
        jtbListarJogos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Jogador 1", "Pontos", "Jogador 2", "Pontos", "Tipo Colecao"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbListarJogos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtbListarJogos.setGridColor(new java.awt.Color(21, 30, 51));
        jtbListarJogos.setOpaque(false);
        jtbListarJogos.setSelectionBackground(new java.awt.Color(21, 30, 51));
        jScrollPane3.setViewportView(jtbListarJogos);

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(21, 30, 51));
        jLabel5.setText("Convidar para jogar");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(21, 30, 51));
        jLabel6.setText("Jogo Anteriores");

        jButtonConvidarJogo.setBackground(new java.awt.Color(21, 30, 51));
        jButtonConvidarJogo.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonConvidarJogo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonConvidarJogo.setText("Convidar Para Jogar");
        jButtonConvidarJogo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonConvidarJogo.setContentAreaFilled(false);
        jButtonConvidarJogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonConvidarJogo.setOpaque(true);
        jButtonConvidarJogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonConvidarJogoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonConvidarJogoMouseExited(evt);
            }
        });
        jButtonConvidarJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvidarJogoActionPerformed(evt);
            }
        });

        jButtonJogar.setBackground(new java.awt.Color(21, 30, 51));
        jButtonJogar.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonJogar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonJogar.setText("Jogar");
        jButtonJogar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonJogar.setContentAreaFilled(false);
        jButtonJogar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonJogar.setOpaque(true);
        jButtonJogar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonJogarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonJogarMouseExited(evt);
            }
        });
        jButtonJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJogarActionPerformed(evt);
            }
        });

        jComboBoxColecaoJogo.setForeground(new java.awt.Color(21, 30, 51));
        jComboBoxColecaoJogo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Camiseta", "Cartao", "Jogo", "Moeda", "Quadrinho", "HotWheels" }));
        jComboBoxColecaoJogo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jComboBoxColecaoJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxColecaoJogoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(21, 30, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("TRUNFO COLECIONADORES");

        javax.swing.GroupLayout jPanelJogoLayout = new javax.swing.GroupLayout(jPanelJogo);
        jPanelJogo.setLayout(jPanelJogoLayout);
        jPanelJogoLayout.setHorizontalGroup(
            jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJogoLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelJogoLayout.createSequentialGroup()
                        .addGroup(jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonJogar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanelJogoLayout.createSequentialGroup()
                                .addComponent(jComboBoxColecaoJogo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonConvidarJogo, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanelJogoLayout.setVerticalGroup(
            jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJogoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(38, 38, 38)
                .addGroup(jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelJogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConvidarJogo)
                    .addComponent(jButtonJogar)
                    .addComponent(jComboBoxColecaoJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBackground(new java.awt.Color(233, 234, 237));
        setAutoscrolls(true);
        getContentPane().setLayout(new java.awt.CardLayout());

        jScrollPane1.setBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(1265, 801));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setAutoscrolls(true);
        jPanel12.setMinimumSize(new java.awt.Dimension(1145, 801));

        jPanel3.setBackground(new java.awt.Color(233, 234, 237));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabelFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFoto.setToolTipText("Trocar foto");
        jLabelFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(205, 205, 205)));
        jLabelFoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelFoto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelFoto.setMaximumSize(new java.awt.Dimension(50, 50));
        jLabelFoto.setMinimumSize(new java.awt.Dimension(50, 50));
        jLabelFoto.setName(""); // NOI18N
        jLabelFoto.setPreferredSize(new java.awt.Dimension(50, 50));
        jLabelFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelFotoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelFotoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelFotoMouseExited(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(233, 234, 237));

        jPanel14.setBackground(new java.awt.Color(233, 234, 237));
        jPanel14.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createMatteBorder(0, 0, 11, 0, new java.awt.Color(21, 30, 51))));
        jPanel14.setPreferredSize(new java.awt.Dimension(455, 115));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 455, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 103, Short.MAX_VALUE)
        );

        jPanel13.add(jPanel14);

        jButtonNome.setBackground(new java.awt.Color(255, 255, 255));
        jButtonNome.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButtonNome.setForeground(new java.awt.Color(21, 30, 51));
        jButtonNome.setText("Nome:");
        jButtonNome.setContentAreaFilled(false);
        jButtonNome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonNome.setEnabled(false);
        jButtonNome.setFocusPainted(false);
        jButtonNome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonNome.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButtonNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNomeActionPerformed(evt);
            }
        });

        jButtonRecado.setBackground(new java.awt.Color(233, 234, 237));
        jButtonRecado.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonRecado.setForeground(new java.awt.Color(21, 30, 51));
        jButtonRecado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mensagem.png"))); // NOI18N
        jButtonRecado.setText("CONVERSAS");
        jButtonRecado.setBorder(null);
        jButtonRecado.setContentAreaFilled(false);
        jButtonRecado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRecado.setFocusPainted(false);
        jButtonRecado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonRecado.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonRecado.setOpaque(true);
        jButtonRecado.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonRecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecadoActionPerformed(evt);
            }
        });

        jButtonAdicionarAmigo.setBackground(new java.awt.Color(233, 234, 237));
        jButtonAdicionarAmigo.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonAdicionarAmigo.setForeground(new java.awt.Color(21, 30, 51));
        jButtonAdicionarAmigo.setText("Perfil do Usuario");
        jButtonAdicionarAmigo.setBorder(null);
        jButtonAdicionarAmigo.setContentAreaFilled(false);
        jButtonAdicionarAmigo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAdicionarAmigo.setFocusPainted(false);
        jButtonAdicionarAmigo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonAdicionarAmigo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAdicionarAmigo.setOpaque(true);
        jButtonAdicionarAmigo.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonAdicionarAmigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonAdicionarAmigoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonAdicionarAmigoMouseExited(evt);
            }
        });
        jButtonAdicionarAmigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarAmigoActionPerformed(evt);
            }
        });

        jComboBoxAtividade.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jComboBoxAtividade.setForeground(new java.awt.Color(21, 30, 51));
        jComboBoxAtividade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Amigos", "Rede", "Minhas" }));
        jComboBoxAtividade.setBorder(null);
        jComboBoxAtividade.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxAtividade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAtividadeActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Notícias");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(31, 20, 51)));

        jComboBoxPrioridade.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jComboBoxPrioridade.setForeground(new java.awt.Color(21, 30, 51));
        jComboBoxPrioridade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Principais", "Recentes", "Interessantes" }));
        jComboBoxPrioridade.setBorder(null);
        jComboBoxPrioridade.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxPrioridade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPrioridadeActionPerformed(evt);
            }
        });

        jLabelRank.setBackground(new java.awt.Color(233, 234, 237));
        jLabelRank.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelRank.setForeground(new java.awt.Color(21, 30, 51));
        jLabelRank.setText("Rank: ");
        jLabelRank.setBorder(null);
        jLabelRank.setContentAreaFilled(false);
        jLabelRank.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelRank.setEnabled(false);
        jLabelRank.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelRank.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelRank.setOpaque(true);
        jLabelRank.setPreferredSize(new java.awt.Dimension(230, 21));
        jLabelRank.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelRankMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelRankMouseExited(evt);
            }
        });
        jLabelRank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLabelRankActionPerformed(evt);
            }
        });

        jLabelNumeroColecoes.setBackground(new java.awt.Color(233, 234, 237));
        jLabelNumeroColecoes.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelNumeroColecoes.setForeground(new java.awt.Color(21, 30, 51));
        jLabelNumeroColecoes.setText("Quantidade Coleções: ");
        jLabelNumeroColecoes.setBorder(null);
        jLabelNumeroColecoes.setContentAreaFilled(false);
        jLabelNumeroColecoes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelNumeroColecoes.setEnabled(false);
        jLabelNumeroColecoes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelNumeroColecoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelNumeroColecoes.setOpaque(true);
        jLabelNumeroColecoes.setPreferredSize(new java.awt.Dimension(230, 21));
        jLabelNumeroColecoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelNumeroColecoesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelNumeroColecoesMouseExited(evt);
            }
        });
        jLabelNumeroColecoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLabelNumeroColecoesActionPerformed(evt);
            }
        });

        jLabelItens.setBackground(new java.awt.Color(233, 234, 237));
        jLabelItens.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelItens.setForeground(new java.awt.Color(21, 30, 51));
        jLabelItens.setText("Quantidade Itens: ");
        jLabelItens.setBorder(null);
        jLabelItens.setContentAreaFilled(false);
        jLabelItens.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelItens.setEnabled(false);
        jLabelItens.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelItens.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelItens.setOpaque(true);
        jLabelItens.setPreferredSize(new java.awt.Dimension(230, 21));
        jLabelItens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelItensMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelItensMouseExited(evt);
            }
        });
        jLabelItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLabelItensActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Adicionar Coleção");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(31, 20, 51)));

        jButtonTroca.setBackground(new java.awt.Color(233, 234, 237));
        jButtonTroca.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonTroca.setForeground(new java.awt.Color(21, 30, 51));
        jButtonTroca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home_trocas.png"))); // NOI18N
        jButtonTroca.setText("Trocas");
        jButtonTroca.setBorder(null);
        jButtonTroca.setContentAreaFilled(false);
        jButtonTroca.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonTroca.setFocusPainted(false);
        jButtonTroca.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonTroca.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonTroca.setOpaque(true);
        jButtonTroca.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonTroca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonTrocaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonTrocaMouseExited(evt);
            }
        });
        jButtonTroca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTrocaActionPerformed(evt);
            }
        });

        jButtonComunidade.setBackground(new java.awt.Color(233, 234, 237));
        jButtonComunidade.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonComunidade.setForeground(new java.awt.Color(21, 30, 51));
        jButtonComunidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/comunidades2.png"))); // NOI18N
        jButtonComunidade.setText("Comunidades");
        jButtonComunidade.setBorder(null);
        jButtonComunidade.setContentAreaFilled(false);
        jButtonComunidade.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonComunidade.setFocusPainted(false);
        jButtonComunidade.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonComunidade.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonComunidade.setOpaque(true);
        jButtonComunidade.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonComunidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonComunidadeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonComunidadeMouseExited(evt);
            }
        });
        jButtonComunidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComunidadeActionPerformed(evt);
            }
        });

        jButtonAmigos.setBackground(new java.awt.Color(233, 234, 237));
        jButtonAmigos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonAmigos.setForeground(new java.awt.Color(21, 30, 51));
        jButtonAmigos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home_amigos.png"))); // NOI18N
        jButtonAmigos.setText("Amigos");
        jButtonAmigos.setBorder(null);
        jButtonAmigos.setContentAreaFilled(false);
        jButtonAmigos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAmigos.setFocusPainted(false);
        jButtonAmigos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonAmigos.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonAmigos.setOpaque(true);
        jButtonAmigos.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonAmigos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonAmigosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonAmigosMouseExited(evt);
            }
        });
        jButtonAmigos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAmigosActionPerformed(evt);
            }
        });

        jButtonShopping.setBackground(new java.awt.Color(233, 234, 237));
        jButtonShopping.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonShopping.setForeground(new java.awt.Color(21, 30, 51));
        jButtonShopping.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home_shopping.png"))); // NOI18N
        jButtonShopping.setText("Shopping");
        jButtonShopping.setBorder(null);
        jButtonShopping.setContentAreaFilled(false);
        jButtonShopping.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonShopping.setFocusPainted(false);
        jButtonShopping.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonShopping.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonShopping.setOpaque(true);
        jButtonShopping.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonShopping.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonShoppingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonShoppingMouseExited(evt);
            }
        });
        jButtonShopping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShoppingActionPerformed(evt);
            }
        });

        jButtonEventos.setBackground(new java.awt.Color(233, 234, 237));
        jButtonEventos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonEventos.setForeground(new java.awt.Color(21, 30, 51));
        jButtonEventos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home_evento.png"))); // NOI18N
        jButtonEventos.setText("Eventos");
        jButtonEventos.setBorder(null);
        jButtonEventos.setContentAreaFilled(false);
        jButtonEventos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonEventos.setFocusPainted(false);
        jButtonEventos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonEventos.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonEventos.setOpaque(true);
        jButtonEventos.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonEventos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonEventosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonEventosMouseExited(evt);
            }
        });
        jButtonEventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEventosActionPerformed(evt);
            }
        });

        jButtonLeilao.setBackground(new java.awt.Color(233, 234, 237));
        jButtonLeilao.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonLeilao.setForeground(new java.awt.Color(21, 30, 51));
        jButtonLeilao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home_leilao.png"))); // NOI18N
        jButtonLeilao.setText("Leilão");
        jButtonLeilao.setBorder(null);
        jButtonLeilao.setContentAreaFilled(false);
        jButtonLeilao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonLeilao.setFocusPainted(false);
        jButtonLeilao.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonLeilao.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonLeilao.setOpaque(true);
        jButtonLeilao.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonLeilao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonLeilaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonLeilaoMouseExited(evt);
            }
        });
        jButtonLeilao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLeilaoActionPerformed(evt);
            }
        });

        jButtonPublicidade.setBackground(new java.awt.Color(233, 234, 237));
        jButtonPublicidade.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonPublicidade.setForeground(new java.awt.Color(21, 30, 51));
        jButtonPublicidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home_publicidade.png"))); // NOI18N
        jButtonPublicidade.setText("Publicidade");
        jButtonPublicidade.setBorder(null);
        jButtonPublicidade.setContentAreaFilled(false);
        jButtonPublicidade.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonPublicidade.setFocusPainted(false);
        jButtonPublicidade.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonPublicidade.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonPublicidade.setOpaque(true);
        jButtonPublicidade.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonPublicidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonPublicidadeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonPublicidadeMouseExited(evt);
            }
        });
        jButtonPublicidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPublicidadeActionPerformed(evt);
            }
        });

        jComboBoxColecao.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jComboBoxColecao.setForeground(new java.awt.Color(21, 30, 51));
        jComboBoxColecao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Camiseta", "Cartão", "HotWheels", "Jogo", "Moeda", "Quadrinho" }));
        jComboBoxColecao.setBorder(null);
        jComboBoxColecao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxColecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxColecaoActionPerformed(evt);
            }
        });

        Excluir.setBackground(new java.awt.Color(153, 0, 0));
        Excluir.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Excluir.setForeground(java.awt.SystemColor.control);
        Excluir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Excluir.setText("Remover Item");
        Excluir.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        Excluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Excluir.setOpaque(true);
        Excluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExcluirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExcluirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExcluirMouseExited(evt);
            }
        });

        ADDItem.setBackground(new java.awt.Color(0, 102, 0));
        ADDItem.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        ADDItem.setForeground(java.awt.SystemColor.control);
        ADDItem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ADDItem.setText("Adicionar Item");
        ADDItem.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        ADDItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ADDItem.setOpaque(true);
        ADDItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADDItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ADDItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ADDItemMouseExited(evt);
            }
        });

        jComboBoxItem.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jComboBoxItem.setForeground(new java.awt.Color(21, 30, 51));
        jComboBoxItem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione um item" }));
        jComboBoxItem.setBorder(null);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelNumeroColecoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAdicionarAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jButtonNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabelRank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRecado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxAtividade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxPrioridade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonTroca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonComunidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAmigos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEventos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jButtonShopping, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonLeilao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPublicidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxColecao, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ADDItem, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBoxItem, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonNome, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAdicionarAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRank, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNumeroColecoes, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelItens, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRecado, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTroca, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonComunidade, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAmigos, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEventos, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonShopping, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLeilao, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPublicidade, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxAtividade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxColecao, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADDItem, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxItem, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(233, 234, 237));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setMinimumSize(new java.awt.Dimension(250, 100));

        jButtonJogoTrunfo.setBackground(new java.awt.Color(21, 30, 51));
        jButtonJogoTrunfo.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonJogoTrunfo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonJogoTrunfo.setText("Super Trunfo");
        jButtonJogoTrunfo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonJogoTrunfo.setContentAreaFilled(false);
        jButtonJogoTrunfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonJogoTrunfo.setFocusPainted(false);
        jButtonJogoTrunfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonJogoTrunfo.setOpaque(true);
        jButtonJogoTrunfo.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonJogoTrunfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonJogoTrunfoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonJogoTrunfoMouseEntered(evt);
            }
        });
        jButtonJogoTrunfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJogoTrunfoActionPerformed(evt);
            }
        });

        jButtonCamiseta.setBackground(new java.awt.Color(21, 30, 51));
        jButtonCamiseta.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonCamiseta.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCamiseta.setText("Coleção de Camiseta");
        jButtonCamiseta.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonCamiseta.setContentAreaFilled(false);
        jButtonCamiseta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonCamiseta.setFocusPainted(false);
        jButtonCamiseta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonCamiseta.setOpaque(true);
        jButtonCamiseta.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonCamiseta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCamisetaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonCamisetaMouseExited(evt);
            }
        });
        jButtonCamiseta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCamisetaActionPerformed(evt);
            }
        });

        jButtonQuadrinho.setBackground(new java.awt.Color(21, 30, 51));
        jButtonQuadrinho.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonQuadrinho.setForeground(new java.awt.Color(255, 255, 255));
        jButtonQuadrinho.setText("Coleção de Quadrinho");
        jButtonQuadrinho.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonQuadrinho.setContentAreaFilled(false);
        jButtonQuadrinho.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonQuadrinho.setFocusPainted(false);
        jButtonQuadrinho.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonQuadrinho.setOpaque(true);
        jButtonQuadrinho.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonQuadrinho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonQuadrinhoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonQuadrinhoMouseExited(evt);
            }
        });
        jButtonQuadrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuadrinhoActionPerformed(evt);
            }
        });

        jButtonHotWheels1.setBackground(new java.awt.Color(21, 30, 51));
        jButtonHotWheels1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonHotWheels1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonHotWheels1.setText("Coleção de HotWheels");
        jButtonHotWheels1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonHotWheels1.setContentAreaFilled(false);
        jButtonHotWheels1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonHotWheels1.setFocusPainted(false);
        jButtonHotWheels1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonHotWheels1.setOpaque(true);
        jButtonHotWheels1.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonHotWheels1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonHotWheels1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonHotWheels1MouseExited(evt);
            }
        });
        jButtonHotWheels1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHotWheels1ActionPerformed(evt);
            }
        });

        jButtonMoeda.setBackground(new java.awt.Color(21, 30, 51));
        jButtonMoeda.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonMoeda.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMoeda.setText("Coleção de Moeda");
        jButtonMoeda.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonMoeda.setContentAreaFilled(false);
        jButtonMoeda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonMoeda.setFocusPainted(false);
        jButtonMoeda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonMoeda.setOpaque(true);
        jButtonMoeda.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonMoeda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonMoedaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonMoedaMouseExited(evt);
            }
        });
        jButtonMoeda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoedaActionPerformed(evt);
            }
        });

        jButtonCartao.setBackground(new java.awt.Color(21, 30, 51));
        jButtonCartao.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonCartao.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCartao.setText("Coleção de Cartão");
        jButtonCartao.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonCartao.setContentAreaFilled(false);
        jButtonCartao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonCartao.setFocusPainted(false);
        jButtonCartao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonCartao.setOpaque(true);
        jButtonCartao.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonCartao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCartaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonCartaoMouseExited(evt);
            }
        });
        jButtonCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCartaoActionPerformed(evt);
            }
        });

        jButtonJogo.setBackground(new java.awt.Color(21, 30, 51));
        jButtonJogo.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonJogo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonJogo.setText("Coleção de Jogo");
        jButtonJogo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jButtonJogo.setContentAreaFilled(false);
        jButtonJogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonJogo.setFocusPainted(false);
        jButtonJogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonJogo.setOpaque(true);
        jButtonJogo.setPreferredSize(new java.awt.Dimension(230, 21));
        jButtonJogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonJogoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonJogoMouseExited(evt);
            }
        });
        jButtonJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJogoActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Suas Coleções");
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Jogos");
        jLabel4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jPanelSugestao.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCartao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCamiseta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonHotWheels1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonQuadrinho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonMoeda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonJogo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonJogoTrunfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanelSugestao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCamiseta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonHotWheels1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonQuadrinho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonMoeda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCartao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonJogoTrunfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelSugestao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCentro.setLayout(new javax.swing.BoxLayout(jPanelCentro, javax.swing.BoxLayout.PAGE_AXIS));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelCentro, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCentro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        jScrollPane1.setViewportView(jPanel12);

        getContentPane().add(jScrollPane1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFotoMouseClicked
        // TODO add your handling code here:
        if(Principal.getIdUserLogando()==idUsuario){
            String caminho;
            JFileChooser arquivo = new JFileChooser();//INSTANCIA O SELECIONADOR
            File diretorio = new File("C:\\Users\\aluno\\Pictures");//NOVO CODIGO PARA DEFINIR PASTA RAIZ DO FILE CHOOSER
            arquivo.setCurrentDirectory(diretorio);
            arquivo.showOpenDialog(null);
            //        jLabelFoto.setSize(234,202);
            caminho = arquivo.getSelectedFile().getAbsolutePath(); //VARIAVEL CAMINHO RECEBE O ENDEREÇO DA IMAGEM
            Image img=new ImageIcon(caminho).getImage().getScaledInstance(jLabelFoto.getWidth(), jLabelFoto.getHeight(), Image.SCALE_SMOOTH);
            jLabelFoto.setIcon(new ImageIcon(img));
            if(Principal.getIdUserLogando()==idUsuario){
                Dados.getUsuariosBD().get(Principal.getIdUserLogando()).setFoto(img);
            }
        }
    }//GEN-LAST:event_jLabelFotoMouseClicked

    private void jLabelFotoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFotoMouseEntered

    }//GEN-LAST:event_jLabelFotoMouseEntered

    private void jLabelFotoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFotoMouseExited

    }//GEN-LAST:event_jLabelFotoMouseExited

    private void jButtonRecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecadoActionPerformed
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        JIFrameRecado jIFrameRecado = new JIFrameRecado(idUsuario);
        jIFrameRecado.idUserLogando=Principal.getIdUserLogando();
        this.jPanelCentro.add(jIFrameRecado);
        jIFrameRecado.setVisible(true);       
        this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonRecadoActionPerformed

    private void jButtonAdicionarAmigoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAdicionarAmigoMouseEntered
        jButtonAdicionarAmigo.setOpaque(true);
        jButtonAdicionarAmigo.setBackground(new Color(250,250,250));        
    }//GEN-LAST:event_jButtonAdicionarAmigoMouseEntered

    private void jButtonAdicionarAmigoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAdicionarAmigoMouseExited
        Color padrao=new Color(233,234,237);
        jButtonAdicionarAmigo.setBackground(padrao);
    }//GEN-LAST:event_jButtonAdicionarAmigoMouseExited

    private void jButtonAdicionarAmigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarAmigoActionPerformed
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        JIFrameEditarPerfil jIFrameEditarPerfil=new JIFrameEditarPerfil(Principal.getIdUserLogando());
        jIFrameEditarPerfil.idUserLogando=Principal.getIdUserLogando();
        if(Principal.getIdUserLogando()!=idUsuario){
            jIFrameEditarPerfil.NoEdit();
        }
      this.jPanelCentro.add(jIFrameEditarPerfil);
        jIFrameEditarPerfil.setVisible(true);
        try {jIFrameEditarPerfil.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonAdicionarAmigoActionPerformed

    private void jComboBoxColecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxColecaoActionPerformed
        String op;
        op = this.jComboBoxColecao.getSelectedItem().toString();
        System.out.println(""+op);

        if(null != op)switch (op) {
            case "Moeda":
            if(usuario.getColecaoMoeda().size()!=0){this.jComboBoxItem.setEnabled(true);}
            this.jComboBoxItem.removeAllItems();
            Iterator<Moeda> itMoeda = Dados.getColecaoMoeda(idUserLogando).iterator();
            while(itMoeda.hasNext()){
                Moeda e = itMoeda.next();
                String nomesitens = e.getNomeM();
                this.jComboBoxItem.addItem(nomesitens);
            }     break;

            case "Camiseta":
            if(usuario.getColecaoCamiseta().size()!=0){this.jComboBoxItem.setEnabled(true);}
            this.jComboBoxItem.removeAllItems();
            Iterator<Camiseta> itCamiseta = Dados.getColecaoCamiseta(idUserLogando).iterator();
            while(itCamiseta.hasNext()){
                Camiseta e = itCamiseta.next();
                String nomesitens = e.getNome();
                this.jComboBoxItem.addItem(nomesitens);
            }     break;

            case "Cartão":
            if(usuario.getColecaoCartao().size()!=0){this.jComboBoxItem.setEnabled(true);}
            this.jComboBoxItem.removeAllItems();
            Iterator<Cartao> itCartao = Dados.getColecaoCartao(idUserLogando).iterator();
            while(itCartao.hasNext()){
                Cartao e = itCartao.next();
                String nomesitens = e.getNome();
                this.jComboBoxItem.addItem(nomesitens);
            }     break;

            case "Jogo":
            if(usuario.getColecaoJogo().size()!=0){this.jComboBoxItem.setEnabled(true);}
            this.jComboBoxItem.removeAllItems();
            Iterator<Jogo> itJogo = Dados.getColecaoJogo(idUserLogando).iterator();
            while(itJogo.hasNext()){
                Jogo e = itJogo.next();
                String nomesitens = e.getNome();
                this.jComboBoxItem.addItem(nomesitens);
            }     break;
            case "Quadrinho":
            if(usuario.getColecaoQuadrinho().size()!=0){this.jComboBoxItem.setEnabled(true);}
            this.jComboBoxItem.removeAllItems();
            Iterator<Quadrinho> itQuadrinho = Dados.getColecaoQuadrinho(idUserLogando).iterator();
            while(itQuadrinho.hasNext()){
                Quadrinho e = itQuadrinho.next();
                String nomesitens = e.getTitulo();
                this.jComboBoxItem.addItem(nomesitens);
            }     break;

            case "HotWheels":
            if(usuario.getColecaohWheels().size()!=0){this.jComboBoxItem.setEnabled(true);}
            this.jComboBoxItem.removeAllItems();
            Iterator<hWheels> ithWheels = Dados.getColecaohWheels(idUserLogando).iterator();
            while(ithWheels.hasNext()){
                hWheels e = ithWheels.next();
                String nomesitens = e.getNome();
                this.jComboBoxItem.addItem(nomesitens);
            }     break;
            default:
            JOptionPane.showMessageDialog(this, "Escolha uma Coleção");
            break;
        }
    }//GEN-LAST:event_jComboBoxColecaoActionPerformed

    private void ADDItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDItemMouseClicked
        if(Principal.getIdUserLogando()==idUsuario){
            String op;
            op = this.jComboBoxColecao.getSelectedItem().toString();
            System.out.println(""+op);
            if(null != op)switch (op) {
                case "Moeda":
                JIFrameMoeda moeda=new JIFrameMoeda();
                ExibeItemColecao O=new ExibeItemColecao(moeda);

                break;
                case "Cartão":
                JIFrameCartao jIFrameCartao = new JIFrameCartao();
                e=new ExibeItemColecao(jIFrameCartao);
                
                break;
                case "HotWheels":
                JIFramehWheels hwheels=new JIFramehWheels();
                e=new ExibeItemColecao(hwheels);
                break;
                case "Jogo":
                JIFrameJogo jogo=new JIFrameJogo();
                e=new ExibeItemColecao(jogo);
                break;
                case "Camiseta":
                JIFrameCamiseta jIFrameCamiseta = new JIFrameCamiseta();
                e=new ExibeItemColecao(jIFrameCamiseta);
                break;
                case "Quadrinho":
                JIFrameQuadrinho quadrinho=new JIFrameQuadrinho();
                e=new ExibeItemColecao(quadrinho);
                break;
                default:
                JOptionPane.showMessageDialog(this, "Escolha uma Coleção");
                break;
            }
            
        }
    }//GEN-LAST:event_ADDItemMouseClicked

    private void ADDItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDItemMouseExited
        // TODO add your handling code here:
        if(Principal.getIdUserLogando()==idUsuario){
            Color padrao=new Color(0,102,0);
            ADDItem.setBackground(padrao);
        }
    }//GEN-LAST:event_ADDItemMouseExited

    private void ADDItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDItemMouseEntered
        // TODO add your handling code here:
        if(Principal.getIdUserLogando()==idUsuario){
            Color padrao=new Color(0,153,0);
            ADDItem.setBackground(padrao);
        }
    }//GEN-LAST:event_ADDItemMouseEntered

    private void ExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExcluirMouseClicked
        // TODO add your handling code here:
        String op;
        op = this.jComboBoxColecao.getSelectedItem().toString();
        String opItem;
        opItem = this.jComboBoxItem.getSelectedItem().toString();
        System.out.println(""+opItem);
        if(null != op)switch (op) {
            case "Moeda":
            for (Moeda moeda : Dados.getColecaoMoeda(idUserLogando)) {
                if(opItem.equals(moeda.getNomeM())){
                    Atividade atividade=new Atividade(moeda.getIdItem(),4, idUserLogando, 2, "Excluiu o item "+moeda.getNomeM(),"(MOEDA)");
                    JOptionPane.showMessageDialog(this, "Camiseta"+moeda.getNomeM()+" excluída");
                    atividade.salvar();
                    atividade.bloquearAtividades(idUserLogando);
                    Dados.getMoedasBD().get(moeda.getIdItem()).setIdUsuario(0);

                }
            }
            break;
            case "Camiseta":
            for (Camiseta camiseta : Dados.getColecaoCamiseta(idUserLogando)) {
                if(opItem.equals(camiseta.getNome())){
                    Atividade atividade=new Atividade(camiseta.getIdItem(),1, idUserLogando, 2, "Excluiu o item "+camiseta.getNome(),"(CAMISETA)");
                    JOptionPane.showMessageDialog(this, "Camiseta "+camiseta.getNome()+" excluída");
                    atividade.salvar();
                    atividade.bloquearAtividades(idUserLogando);
                    Dados.getCamisetasBD().get(camiseta.getIdItem()).setIdUsuario(0);
                }
            }
            break;
            case "Cartão":
            for (Cartao cartao : Dados.getColecaoCartao(idUserLogando)) {
                if(opItem.equals(cartao.getNome())){
                    Atividade atividade=new Atividade(cartao.getIdItem(),2, idUserLogando, 2, "Excluiu o item "+cartao.getNome(),"(CARTÃO)");
                    JOptionPane.showMessageDialog(this, "Cartão "+cartao.getNome()+" excluída");
                    atividade.salvar();
                    atividade.bloquearAtividades(idUserLogando);
                    Dados.getCartoesBD().get(cartao.getIdItem()).setIdUsuario(0);
                    cartao.setIdUsuario(0);
                }
            }
            break;
            case "Jogo":
            for (Jogo jogo : Dados.getColecaoJogo(idUserLogando)) {
                if(opItem.equals(jogo.getNome())){
                    Atividade atividade=new Atividade(jogo.getIdItem(),3, idUserLogando, 2, "Excluiu o item "+jogo.getNome(),"(JOGO)");
                    JOptionPane.showMessageDialog(this, "Jogo "+jogo.getNome()+" excluída");
                    atividade.salvar();
                    atividade.bloquearAtividades(idUserLogando);
                    Dados.getCartoesBD().get(jogo.getIdItem()).setIdUsuario(0);
                    jogo.setIdUsuario(0);
                }
            }
            break;
            case "Quadrinho":
            for (Quadrinho quadrinho : Dados.getColecaoQuadrinho(idUserLogando)) {
                if(opItem.equals(quadrinho.getTitulo())){
                    Atividade atividade=new Atividade(quadrinho.getIdItem(),5, idUserLogando, 2, "Excluiu o item "+quadrinho.getTitulo(),"(QUADRINHO)");
                    JOptionPane.showMessageDialog(this, "Quadrinho "+quadrinho.getTitulo()+" excluída");
                    atividade.salvar();
                    atividade.bloquearAtividades(idUserLogando);
                    Dados.getQuadrinhosBD().get(quadrinho.getIdItem()).setIdUsuario(0);
                    quadrinho.setIdUsuario(0);
                }
            }
            break;
            case "HotWheels":
            for (hWheels hotWheels : Dados.getColecaohWheels(idUserLogando)) {
                if(opItem.equals(hotWheels.getNome())){
                    Atividade atividade=new Atividade(hotWheels.getIdItem(),6, idUserLogando, 2, "Excluiu o item "+hotWheels.getNome(),"(HOT WHEELS)");
                    JOptionPane.showMessageDialog(this, "Hot Wheels "+hotWheels+" excluída");
                    atividade.salvar();
                    atividade.bloquearAtividades(idUserLogando);
                    Dados.getHotWheelsBD().get(hotWheels.getIdItem()).setIdUsuario(0);
                    hotWheels.setIdUsuario(0);
                }
            }
            break;
            default:
            JOptionPane.showMessageDialog(this, "Escolha uma Coleção");
            break;
        }
    }//GEN-LAST:event_ExcluirMouseClicked

    private void ExcluirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExcluirMouseEntered
        // TODO add your handling code here:
        if(Principal.getIdUserLogando()==idUsuario){
            Color padrao=new Color(204,0,0);
            Excluir.setBackground(padrao);
        }
    }//GEN-LAST:event_ExcluirMouseEntered

    private void ExcluirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExcluirMouseExited
        // TODO add your handling code here:
        if(Principal.getIdUserLogando()==idUsuario){
            Color padrao=new Color(153,0,0);
            Excluir.setBackground(padrao);
        }
    }//GEN-LAST:event_ExcluirMouseExited

    private void jButtonNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNomeActionPerformed

    private void jComboBoxAtividadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAtividadeActionPerformed
       
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        this.jPanelAtividadeRede1=new JPanelAtividadeRede();
       this.jPanelCentro.add(jPanelAtividadeRede1);
        int escolha=this.jComboBoxAtividade.getSelectedIndex();
        switch (escolha){
            case 2: this.jPanelAtividadeRede1.ativadadesUsuario(idUsuario);break;
            case 0: this.jPanelAtividadeRede1.ativadadesAmigos(idUsuario);break;
            case 1: this.jPanelAtividadeRede1.ativadadesRede();break;
            default: this.jPanelAtividadeRede1.ativadadesRede();break;
        }
       this.jPanelAtividadeRede1.updateUI();
       
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jComboBoxAtividadeActionPerformed

    private void jComboBoxPrioridadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPrioridadeActionPerformed
       this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        this.jPanelAtividadeRede1=new JPanelAtividadeRede();
       this.jPanelCentro.add(jPanelAtividadeRede1);
        int escolha=this.jComboBoxPrioridade.getSelectedIndex();
        switch (escolha){
            case 2: this.jPanelAtividadeRede1.organizarImportantes();break;
            case 0: this.jPanelAtividadeRede1.organizarImportantes();break;
            case 1: this.jPanelAtividadeRede1.organizarRecente();break;
            default: this.jPanelAtividadeRede1.organizarRecente();break;
        }
       this.jPanelAtividadeRede1.updateUI();
      
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jComboBoxPrioridadeActionPerformed

    private void jLabelRankMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRankMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelRankMouseExited

    private void jLabelRankMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRankMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelRankMouseEntered

    private void jLabelRankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLabelRankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelRankActionPerformed

    private void jLabelNumeroColecoesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelNumeroColecoesMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelNumeroColecoesMouseExited

    private void jLabelNumeroColecoesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelNumeroColecoesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelNumeroColecoesMouseEntered

    private void jLabelNumeroColecoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLabelNumeroColecoesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelNumeroColecoesActionPerformed

    private void jLabelItensMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelItensMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelItensMouseExited

    private void jLabelItensMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelItensMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelItensMouseEntered

    private void jLabelItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLabelItensActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelItensActionPerformed

    private void jButtonTrocaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTrocaMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonTrocaMouseExited

    private void jButtonTrocaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTrocaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonTrocaMouseEntered

    private void jButtonTrocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTrocaActionPerformed
 this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        for(Troca troca:Dados.listaTrocas){
            if(troca.getIdUserConvidado()==idUserLogando||
               troca.getIdUserCriador()==idUserLogando){
            JPanelTroca paineltroca=new JPanelTroca(troca);
            this.jPanelCentro.add(paineltroca);
            paineltroca.setVisible(true);
            }
        }
    
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonTrocaActionPerformed

    private void jButtonComunidadeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonComunidadeMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonComunidadeMouseExited

    private void jButtonComunidadeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonComunidadeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonComunidadeMouseEntered

    private void jButtonComunidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComunidadeActionPerformed
     //RemoveAll - remove todos os componentes de dentro do DesktopFrame
        this.jPanelCentro.removeAll();
        //Repaint - faz a atualização do conteúdo(componentes) de dentro do DesktopFrame
        this.jPanelCentro.repaint();  
        
        JIFrameComunidade comunidade=new JIFrameComunidade();
        this.jPanelCentro.add(comunidade);
        comunidade.setVisible(true);   
        try {comunidade.setMaximum(true);} 
        catch (PropertyVetoException ex) {  }
      
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonComunidadeActionPerformed

    private void jButtonAmigosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAmigosMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAmigosMouseExited

    private void jButtonAmigosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAmigosMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAmigosMouseEntered

    private void jButtonAmigosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAmigosActionPerformed
      List<Integer> amiguinhos=new ArrayList<Integer>();
        for(Usuario ID:Dados.getAmigos(idUsuario)){
            amiguinhos.add(ID.getIdUsuario());
        }            
        this.jPanelCentro.removeAll();
        for(Integer idUSER:amiguinhos){        
        view.IconUser icone=new view.IconUser(idUSER);
        this.jPanelCentro.add(icone);icone.show(true);
        }        
      
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonAmigosActionPerformed

    private void jButtonShoppingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonShoppingMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonShoppingMouseExited

    private void jButtonShoppingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonShoppingMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonShoppingMouseEntered

    private void jButtonShoppingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShoppingActionPerformed
       //RemoveAll - remove todos os componentes de dentro do DesktopFrame
        this.jPanelCentro.removeAll();
        //Repaint - faz a atualização do conteúdo(componentes) de dentro do DesktopFrame
        this.jPanelCentro.repaint();
            JIFrameVenda comunidade=new JIFrameVenda();
//            JIFrameVenda comunidade=new JIFrameVenda();
           this.jPanelCentro.add(comunidade);
           comunidade.setVisible(true);
           try {comunidade.setMaximum(true);}
catch (PropertyVetoException ex) {  }
         
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonShoppingActionPerformed

    private void jButtonEventosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEventosMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEventosMouseExited

    private void jButtonEventosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEventosMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEventosMouseEntered

    private void jButtonEventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEventosActionPerformed
        //RemoveAll - remove todos os componentes de dentro do DesktopFrame
        jPanelCentro.removeAll();
        //Repaint - faz a atualização do conteúdo(componentes) de dentro do DesktopFrame
        jPanelCentro.repaint();  
        JInternalFrameEvento frameEvento =new JInternalFrameEvento ();
        
        jPanelCentro.add(frameEvento);
        frameEvento.setVisible(true);   
        try {frameEvento.setMaximum(true);} 
        catch (PropertyVetoException ex) {  }
        frameEvento.setVisible(true);
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
       
    }//GEN-LAST:event_jButtonEventosActionPerformed

    private void jButtonLeilaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLeilaoMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLeilaoMouseExited

    private void jButtonLeilaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLeilaoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLeilaoMouseEntered

    private void jButtonLeilaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLeilaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLeilaoActionPerformed

    private void jButtonPublicidadeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPublicidadeMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPublicidadeMouseExited

    private void jButtonPublicidadeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPublicidadeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPublicidadeMouseEntered

    private void jButtonPublicidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPublicidadeActionPerformed
        String caminho;
            JFileChooser arquivo = new JFileChooser();//INSTANCIA O SELECIONADOR
           File diretorio = new File("C:\\Users\\aluno\\Pictures");//NOVO CODIGO PARA DEFINIR PASTA RAIZ DO FILE CHOOSER
            arquivo.setCurrentDirectory(diretorio);
            arquivo.showOpenDialog(null);
            caminho = arquivo.getSelectedFile().getAbsolutePath(); //VARIAVEL CAMINHO RECEBE O ENDEREÇO DA IMAGEM
     if(caminho!=null){
         Image img = new ImageIcon(caminho).getImage().getScaledInstance(250,600, Image.SCALE_DEFAULT);
     usuario.setPubli1(img);
     JOptionPane.showMessageDialog(null, "Publicidade Adicionada");}
    }//GEN-LAST:event_jButtonPublicidadeActionPerformed

    private void jButtonJogoTrunfoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJogoTrunfoMouseExited
        Color padrao=new Color(21,30,51);
        jButtonJogoTrunfo.setBackground(padrao);
    }//GEN-LAST:event_jButtonJogoTrunfoMouseExited

    private void jButtonJogoTrunfoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJogoTrunfoMouseEntered
        jButtonJogoTrunfo.setOpaque(true);
        jButtonJogoTrunfo.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonJogoTrunfoMouseEntered

    private void jButtonJogoTrunfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJogoTrunfoActionPerformed
        listarJogos();
        listarUsuarios();
        if(idUserLog!=null){//RemoveAll - remove todos os componentes de dentro do DesktopFrame
             this.jPanelCentro.removeAll();
            //Repaint - faz a atualização do conteúdo(componentes) de dentro do DesktopFrame
             this.jPanelCentro.repaint();
            container = new JInternalFrame("Super Trunfo");
            ((BasicInternalFrameUI)container.getUI()).setNorthPane(null);
            container.setPreferredSize(new Dimension(800,500));
            container.setBounds(0,0,800,500);
            container.add(this.jPanelJogo);
            container.setBorder(null);//retirar bordas
            this.jPanelJogo.setVisible(true);
            container.setVisible(true);
             this.jPanelCentro.add(container);
            
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
        }

    }//GEN-LAST:event_jButtonJogoTrunfoActionPerformed

    private void jButtonCamisetaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCamisetaMouseExited
        Color padrao=new Color(21,30,51);
        jButtonCamiseta.setBackground(padrao);
    }//GEN-LAST:event_jButtonCamisetaMouseExited

    private void jButtonCamisetaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCamisetaMouseEntered
        jButtonCamiseta.setOpaque(true);
        jButtonCamiseta.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonCamisetaMouseEntered

    private void jButtonCamisetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCamisetaActionPerformed
         this.jPanelCentro.removeAll();
         this.jPanelCentro.repaint();
        JIFrameListarCamiseta jIFrameListarCamiseta = new JIFrameListarCamiseta(idUserLogando);
        jIFrameListarCamiseta.idUserLogando=Principal.getIdUserLogando();
        this.jPanelCentro.add(jIFrameListarCamiseta);
        jIFrameListarCamiseta.setVisible(true);
        try {jIFrameListarCamiseta.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
        this.jButtonCamiseta.setText("");
        this.jButtonCamiseta.setText("Coleção de Camisetas "+"["+usuario.getColecaoCamiseta().size()+"]");
        this.jLabelItens.setText(Integer.toString(usuario.getQuantidadeItensColecoes()));
    }//GEN-LAST:event_jButtonCamisetaActionPerformed

    private void jButtonHotWheels1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHotWheels1MouseExited
        // TODO add your handling code here:
        Color padrao=new Color(21,30,51);
        jButtonHotWheels1.setBackground(padrao);
    }//GEN-LAST:event_jButtonHotWheels1MouseExited

    private void jButtonHotWheels1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHotWheels1MouseEntered
        jButtonHotWheels1.setOpaque(true);
        jButtonHotWheels1.setBackground(Color.DARK_GRAY);

    }//GEN-LAST:event_jButtonHotWheels1MouseEntered

    private void jButtonHotWheels1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHotWheels1ActionPerformed
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        JIFrameListarhWheels jIFrameListarhWheels = new JIFrameListarhWheels (idUsuario);
        jIFrameListarhWheels.idUserLogando=Principal.getIdUserLogando();
        jIFrameListarhWheels.setVisible(true);
        this.jPanelCentro.add(jIFrameListarhWheels);
        try {jIFrameListarhWheels.setMaximum(true);
        } catch (PropertyVetoException ex) {  }

        this.jButtonHotWheels1.setText("Coleção de Hot Wheels "+"["+usuario.getColecaohWheels().size()+"]");
        this.jLabelItens.setText("Quantidade Itens:"+usuario.getQuantidadeItensColecoes());
        
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonHotWheels1ActionPerformed

    private void jButtonQuadrinhoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonQuadrinhoMouseExited
        // TODO add your handling code here:
        Color padrao=new Color(21,30,51);
        jButtonQuadrinho.setBackground(padrao);

    }//GEN-LAST:event_jButtonQuadrinhoMouseExited

    private void jButtonQuadrinhoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonQuadrinhoMouseEntered
        jButtonQuadrinho.setOpaque(true);
        jButtonQuadrinho.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonQuadrinhoMouseEntered

    private void jButtonQuadrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuadrinhoActionPerformed
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        JIFrameListarQuadrinho jIFrameListarQuadrinho = new JIFrameListarQuadrinho (idUsuario);
        jIFrameListarQuadrinho.idUserLogando=Principal.getIdUserLogando();
        jIFrameListarQuadrinho.setVisible(true);
        this.jPanelCentro.add(jIFrameListarQuadrinho);
        try {jIFrameListarQuadrinho.setMaximum(true);
        } catch (PropertyVetoException ex) {  }

        this.jButtonQuadrinho.setText("Coleção de Quadrinho "+"["+usuario.getColecaoQuadrinho().size()+"]");
        this.jLabelItens.setText("Quantidade Itens:"+usuario.getQuantidadeItensColecoes());
        
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonQuadrinhoActionPerformed

    private void jButtonMoedaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMoedaMouseExited
        // TODO add your handling code here:
        Color padrao=new Color(21,30,51);
        jButtonMoeda.setBackground(padrao);
    }//GEN-LAST:event_jButtonMoedaMouseExited

    private void jButtonMoedaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMoedaMouseEntered
        jButtonMoeda.setOpaque(true);
        jButtonMoeda.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonMoedaMouseEntered

    private void jButtonMoedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoedaActionPerformed
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        JIFrameListarMoeda jIFrameListarMoeda = new JIFrameListarMoeda (idUsuario);
        jIFrameListarMoeda.idUserLogando=Principal.getIdUserLogando();
        jIFrameListarMoeda.setVisible(true);
        this.jPanelCentro.add(jIFrameListarMoeda);
        try {jIFrameListarMoeda.setMaximum(true);
        } catch (PropertyVetoException ex) {  }

        this.jButtonMoeda.setText("Coleção de Moedas "+"["+usuario.getColecaoMoeda().size()+"]");
        this.jLabelItens.setText("Quantidade Itens:"+usuario.getQuantidadeItensColecoes());
        
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonMoedaActionPerformed

    private void jButtonCartaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCartaoMouseExited
        // TODO add your handling code here:
        Color padrao=new Color(21,30,51);
        jButtonCartao.setBackground(padrao);
    }//GEN-LAST:event_jButtonCartaoMouseExited

    private void jButtonCartaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCartaoMouseEntered
        jButtonCartao.setOpaque(true);
        jButtonCartao.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonCartaoMouseEntered

    private void jButtonCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCartaoActionPerformed
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        JIFrameListarCartao jIFrameListarCartao = new JIFrameListarCartao(idUsuario);
        jIFrameListarCartao.idUserLogando=Principal.getIdUserLogando();
        jIFrameListarCartao.setVisible(true);
        this.jPanelCentro.add(jIFrameListarCartao);
        try {jIFrameListarCartao.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
        this.jButtonCartao.setText("Coleção de Cartões "+"["+usuario.getColecaoCartao().size()+"]");
        this.jLabelItens.setText("Quantidade Itens:"+usuario.getQuantidadeItensColecoes());
        
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonCartaoActionPerformed

    private void jButtonJogoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJogoMouseExited
        // TODO add your handling code here:
        Color padrao=new Color(21,30,51);
        jButtonJogo.setBackground(padrao);
    }//GEN-LAST:event_jButtonJogoMouseExited

    private void jButtonJogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJogoMouseEntered
        jButtonJogo.setOpaque(true);
        jButtonJogo.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonJogoMouseEntered

    private void jButtonJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJogoActionPerformed
        this.jPanelCentro.removeAll();
        this.jPanelCentro.repaint();
        JIFrameListarJogo jIFrameListarJogo = new JIFrameListarJogo (usuario.getIdUsuario());
        System.out.print(usuario.getIdUsuario());
        jIFrameListarJogo.idUserLogando=Principal.getIdUserLogando();
        jIFrameListarJogo.setVisible(true);
        this.jPanelCentro.add(jIFrameListarJogo);
        try {jIFrameListarJogo.setMaximum(true);
        } catch (PropertyVetoException ex) {  }

        this.jButtonJogo.setText("Coleção de Jogos "+"["+usuario.getColecaoJogo().size()+"]");
        this.jLabelItens.setText("Quantidade Itens:"+usuario.getQuantidadeItensColecoes());
        
         this.jPanelCentro.updateUI();
        this.updateUI();
       ((BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior  
        this.setBorder(null);//retirar bordas  
        try {this.setMaximum(true);
        } catch (PropertyVetoException ex) {  }
    }//GEN-LAST:event_jButtonJogoActionPerformed

    private void jButtonConvidarJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvidarJogoActionPerformed
        if (jtbListarCliente.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Nenhum usuário selecionado");}
        else{
            int idUsuario = (Integer) jtbListarCliente.getValueAt(jtbListarCliente.getSelectedRow(), 0);
            int tipoCarta=this.jComboBoxColecaoJogo.getSelectedIndex()+1;
            Trunfo jogo=new Trunfo(Principal.getIdUserLogando(),idUsuario,tipoCarta);
            if(jogo.verificaExistenciaBaralho()){
                TelaJogo tela=new TelaJogo(jogo.getIdJogo());
                tela.setIdUserLogando(idUserLogando);
                if(tela.getPossuiCartas()){

                    container.dispose();
                    container = new JInternalFrame("Super Trunfo");
                    ((BasicInternalFrameUI)container.getUI()).setNorthPane(null); //retirar o painel superior
                    container.setBorder(null);//retirar bordas
                    container.setPreferredSize(new Dimension(700,500));
                    container.setBounds(0,0,700,500);
                    container.add(tela);
                    tela.setVisible(true);
                    container.setVisible(true);
                    Principal.getjDPPrincipal().removeAll();
                    //Repaint - faz a atualização do conteúdo(componentes) de dentro do DesktopFrame
                    Principal.getjDPPrincipal().repaint();
                    Principal.getjDPPrincipal().add(container);
                    Principal.getjDPPrincipal().updateUI();
                }
            }
        }
    }//GEN-LAST:event_jButtonConvidarJogoActionPerformed

    private void jButtonJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJogarActionPerformed
        if (jtbListarJogos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Nenhum Jogo selecionado");}
        else{
            int idJogo = (int) jtbListarJogos.getValueAt(jtbListarJogos.getSelectedRow(), 0);
            TelaJogo telaJogo=new TelaJogo(idJogo);
            if(telaJogo.getPossuiCartas()){
                telaJogo.setIdUserLogando(idUserLogando);
                Principal.getjDPPrincipal().removeAll();
                //Repaint - faz a atualização do conteúdo(componentes) de dentro do DesktopFrame
                Principal.getjDPPrincipal().repaint();
                container.dispose();
                container = new JInternalFrame("Super Trunfo");
                telaJogo.setVisible(true);
                container.setPreferredSize(new Dimension(800,600));
                container.setBounds(0,0,800,600);
                container.add(telaJogo);
                ((BasicInternalFrameUI)container.getUI()).setNorthPane(null); //retirar o painel superior
                container.setBorder(null);//retirar bordas
                telaJogo.setVisible(true);
                container.setVisible(true);
                Principal.getjDPPrincipal().add(container);
                Principal.getjDPPrincipal().updateUI();
            }
        }
    }//GEN-LAST:event_jButtonJogarActionPerformed

    private void jComboBoxColecaoJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxColecaoJogoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxColecaoJogoActionPerformed

    private void jButtonJogarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJogarMouseEntered
        jButtonJogar.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonJogarMouseEntered

    private void jButtonJogarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJogarMouseExited
        Color padrao=new Color(21,30,51);
        jButtonJogar.setBackground(padrao);
    }//GEN-LAST:event_jButtonJogarMouseExited

    private void jButtonConvidarJogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConvidarJogoMouseEntered
        jButtonConvidarJogo.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_jButtonConvidarJogoMouseEntered

    private void jButtonConvidarJogoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConvidarJogoMouseExited
        Color padrao=new Color(21,30,51);
        jButtonConvidarJogo.setBackground(padrao);
    }//GEN-LAST:event_jButtonConvidarJogoMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ADDItem;
    private javax.swing.JLabel Excluir;
    private javax.swing.JButton jButtonAdicionarAmigo;
    private javax.swing.JButton jButtonAmigos;
    private javax.swing.JButton jButtonCamiseta;
    private javax.swing.JButton jButtonCartao;
    private javax.swing.JButton jButtonComunidade;
    private javax.swing.JButton jButtonConvidarJogo;
    private javax.swing.JButton jButtonEventos;
    private javax.swing.JButton jButtonHotWheels1;
    private javax.swing.JButton jButtonJogar;
    private javax.swing.JButton jButtonJogo;
    private javax.swing.JButton jButtonJogoTrunfo;
    private javax.swing.JButton jButtonLeilao;
    private javax.swing.JButton jButtonMoeda;
    private javax.swing.JButton jButtonNome;
    private javax.swing.JButton jButtonPublicidade;
    private javax.swing.JButton jButtonQuadrinho;
    private javax.swing.JButton jButtonRecado;
    private javax.swing.JButton jButtonShopping;
    private javax.swing.JButton jButtonTroca;
    private javax.swing.JComboBox jComboBoxAtividade;
    private javax.swing.JComboBox jComboBoxColecao;
    private javax.swing.JComboBox jComboBoxColecaoJogo;
    private javax.swing.JComboBox jComboBoxItem;
    private javax.swing.JComboBox jComboBoxPrioridade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private static javax.swing.JLabel jLabelFoto;
    private javax.swing.JButton jLabelItens;
    private javax.swing.JButton jLabelNumeroColecoes;
    private javax.swing.JButton jLabelRank;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private static javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private static javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelCentro;
    private javax.swing.JPanel jPanelJogo;
    private javax.swing.JPanel jPanelSugestao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtbListarCliente;
    private javax.swing.JTable jtbListarJogos;
    // End of variables declaration//GEN-END:variables
 private void listarUsuarios() {

        DefaultTableModel dtm = (DefaultTableModel) jtbListarCliente.getModel();
        dtm.setNumRows(0);

        for(Jogador jogador:Jogador.jogadores.values()) {
            if(jogador.getIdJogador()!=idUserLogando){
            dtm.addRow(new Object[]{jogador.getIdJogador(),
                        Dados.getUsuariosBD().get(jogador.getIdJogador()).getNome(),
                        });
            System.out.println(jogador.getIdJogador());
        }}
    }
    private void listarJogos() {

        DefaultTableModel dtm = (DefaultTableModel) jtbListarJogos.getModel();
        dtm.setNumRows(0);

        for (Trunfo jogo : Trunfo.getJogos().values()) {//percorre a lista de usuarios
            if(jogo.getPlayer1().getIdJogador()==this.idUserLogando||jogo.getPlayer2().getIdJogador()==this.idUserLogando){
                dtm.addRow(new Object[]{jogo.getIdJogo(),
                        jogo.getPlayer1().getNome(),
                        jogo.getPontos1(),
                        jogo.getPlayer2().getNome(),
                        jogo.getPontos2(),
                        jogo.getIdTipoCarta()
                }); 
            }
        }
    }
    
    public  void verificaColecoes(){
    if(usuario.ExisteColecaoCamiseta()){
            jButtonCamiseta.setText("Coleção de Camisetas "+"["+usuario.getColecaoCamiseta().size()+"]");
        } else {
            jButtonCamiseta.setVisible(false);
        }
        if(usuario.ExisteColecaoCartao()){
            jButtonCartao.setText("Coleção de Cartões "+"["+usuario.getColecaoCartao().size()+"]");
        } else {
            jButtonCartao.setVisible(false);
        }
        if(usuario.ExisteColecaoJogo()){
         this.jButtonJogo.setText("Coleção de Jogos "+"["+usuario.getColecaoJogo().size()+"]");
        } else {
            jButtonJogo.setVisible(false);
           
        }
        if(usuario.ExisteColecaoMoeda()){
        jButtonMoeda.setText("Coleção de Moedas "+"["+usuario.getColecaoMoeda().size()+"]");
        } else {
            jButtonMoeda.setVisible(false);
        }
        if(usuario.ExisteColecaoQuadrinho()){
        jButtonQuadrinho.setText("Coleção de Quadrinho "+"["+usuario.getColecaoQuadrinho().size()+"]");
        } else {
            jButtonQuadrinho.setVisible(false);         
        }
        if(usuario.ExisteColecaohWheels()){
        jButtonHotWheels1.setText("Coleção de Hot Wheels "+"["+usuario.getColecaohWheels().size()+"]");
        } else {
            jButtonHotWheels1.setVisible(false);     
        }
    }
    public void sugestaoAmizades(){
    resultados=Dados.sugestaoDeAmizade(idUsuario);
    if(resultados!=null){for(JPanel panel:resultados){
        jPanelSugestao.add(panel);
    }
    jPanelSugestao.updateUI();
    }}
    


}
